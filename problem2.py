#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

import pdb

memoFib = []

def fib(n):
	if n == -1:
		return 0
	elif n == 0:
		return 1
	elif n < len(memoFib):
		return memoFib[n]
	else:
		memoFib.append(fib(n - 1) + fib(n - 2))
		newElement = len(memoFib) - 1
		return memoFib[newElement]

evenFibSum = currentFib = num = 0
while currentFib <= 4000000:
	currentFib = fib(num)
	if currentFib % 2 == 0 and currentFib <= 4000000:
		evenFibSum += currentFib
	num += 1

print evenFibSum


